{"version":3,"sources":["components/partial/DropDown.tsx","components/InputAutoComplete.tsx","components/InputLocation.tsx","app/hooks.ts","app/apiSlice.ts","components/SearchBar.tsx","layout/Header.tsx","app/jobSlice.ts","layout/Jobs.tsx","layout/Paginator.tsx","service/themuseAPI.js","layout/Job.tsx","pages/Home.tsx","App.tsx","app/store.ts","index.tsx"],"names":["DropDown","suggestions","set_input","current_index","set_current_index","is_key_down","useEffect","document","querySelector","scrollIntoView","block","className","map","item","index","onClick","name","onMouseEnter","on_hover","InputAutoComplete","isDisabled","placeholder","min_length","sort","useState","input","setInput","isVisible","setIsVisible","CurrentIndex","setCurrentIndex","length","endIndex","setEndIndex","filteredSuggestions","setFilteredSuggestions","isKeyDown","setIsKeyDown","ref","useRef","handle_click_outside","evt","current","contains","target","filter_suggestions","useCallback","value","toLowerCase","filtered_suggestions","filter","includes","x","y","addEventListener","removeEventListener","onMouseMove","onFocus","onChange","e","preventDefault","onKeyDown","stopPropagation","key","console","log","selected","textContent","handle_key","type","disabled","InputLocation","countries","cities","inputIsVisible","setInputIsVisible","inputIsDisabled","setInputIsDisabled","countryCode","setCountryCode","suggestionsCities","setSuggestionsCities","filter_cities","code_value","res","city","country","reset_country_input","code","set_country_code","country_name","is_visible","state","InputCountry","useAppDispatch","useDispatch","useAppSelector","useSelector","apiSlice","createSlice","initialState","location","category","page_index","page_count","reducers","updateReq","action","payload","actions","reqObj","request","SearchBar","dispatch","onSubmit","replace","trim","submit","categories","Header","info","undefined","jobSlice","setJob","job","Jobs","jobs","setExpand","expand","total","active","setActive","id","job_info","company","locations","date","publication_date","Date","toLocaleDateString","Locations","Paginator","is_loading","page","setPage","update_page","page_evt","themuseApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getJobs","query","src","getJob","getCompany","useGetJobsQuery","useGetCompanyQuery","useGetJobQuery","Job","back_arrow_click","is_expand","scrollTo","levels","level","innerHTML","contents","Content","contentRef","content","Thumbnail","data","isLoading","isSuccess","refs","logo_image","alt","Home","expandJob","setExpandJob","req","error","isError","results","App","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b6a2f2d2.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\n\r\ninterface Props {\r\n  suggestions?: any[];\r\n  set_input: any;\r\n  current_index: number;\r\n  set_current_index: any;\r\n  is_key_down: boolean;\r\n}\r\n\r\nconst DropDown: React.FunctionComponent<Props> = ({\r\n  suggestions = [],\r\n  set_input,\r\n  current_index,\r\n  set_current_index,\r\n  is_key_down,\r\n}) => {\r\n  useEffect(() => {\r\n    document.querySelector(\"._active\")?.scrollIntoView({\r\n      block: \"nearest\",\r\n    });\r\n  });\r\n\r\n  const on_hover = (index: number) => {\r\n    if (is_key_down) return;\r\n    set_current_index(index);\r\n  };\r\n  return (\r\n    <ul className=\"_drop_down\">\r\n      {suggestions.map((item, index) => {\r\n        return (\r\n          <li\r\n            className={`suggestion ${index === current_index ? \"_active\" : \"\"}`}\r\n            key={item.name + index}\r\n            onClick={() => set_input(item.name)}\r\n            onMouseEnter={() => on_hover(index)}\r\n          >\r\n            {item.name}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport \"../styles/input-autocomplete.scss\";\r\nimport DropDown from \"./partial/DropDown\";\r\n\r\ninterface Props {\r\n  suggestions?: any;\r\n  isDisabled?: Boolean;\r\n  placeholder?: string;\r\n  min_length?: Number;\r\n  sort?: Boolean;\r\n}\r\n\r\nconst InputAutoComplete: React.FunctionComponent<Props> = ({\r\n  suggestions = [],\r\n  isDisabled = false,\r\n  placeholder = \"\",\r\n  min_length = 0,\r\n  sort = false,\r\n}) => {\r\n  const [input, setInput] = useState<string>(\"\");\r\n  const [isVisible, setIsVisible] = useState<boolean>(false);\r\n  const [CurrentIndex, setCurrentIndex] = useState<number>(0);\r\n  const [endIndex, setEndIndex] = useState<number>(suggestions.length);\r\n  const [filteredSuggestions, setFilteredSuggestions] = useState<any[]>([]);\r\n  const [isKeyDown, setIsKeyDown] = useState<boolean>(false);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handle_click_outside = (evt: any) => {\r\n    if (ref.current && !ref.current.contains(evt.target)) {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  const filter_suggestions = useCallback(\r\n    (input: string) => {\r\n      let value = input.toLowerCase();\r\n      let filtered_suggestions = [];\r\n      if (value.length >= min_length) {\r\n        filtered_suggestions = suggestions.filter((item: any) =>\r\n          item.name.toLowerCase().includes(value)\r\n        );\r\n        if (sort) {\r\n          filtered_suggestions.sort((x: any, y: any) => {\r\n            return x.name.length - y.name.length;\r\n          });\r\n        }\r\n      }\r\n\r\n      setFilteredSuggestions(filtered_suggestions);\r\n      setEndIndex(filtered_suggestions.length - 1);\r\n    },\r\n    [suggestions, min_length, sort]\r\n  );\r\n\r\n  const input_handler = (evt: any) => {\r\n    evt.preventDefault();\r\n\r\n    setInput(evt.target.value);\r\n    setCurrentIndex(0);\r\n    setIsVisible(true);\r\n  };\r\n\r\n  const set_input = (value: string) => {\r\n    setInput(value);\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const handle_key = (evt: any) => {\r\n    evt.stopPropagation();\r\n    if (evt.key === \"ArrowUp\") {\r\n      console.log(\"arrowup\");\r\n      setIsKeyDown(true);\r\n      if (CurrentIndex === 0) {\r\n        return setCurrentIndex(endIndex);\r\n      }\r\n      setCurrentIndex((index) => index - 1);\r\n    }\r\n    if (evt.key === \"ArrowDown\") {\r\n      console.log(\"arrowdown\");\r\n      setIsKeyDown(true);\r\n      if (CurrentIndex === endIndex) {\r\n        return setCurrentIndex(0);\r\n      }\r\n      setCurrentIndex((index) => index + 1);\r\n    }\r\n    if (evt.key === \"Enter\") {\r\n      if (isVisible) {\r\n        evt.preventDefault(); // prevent form SUBMIT\r\n        let selected = document.querySelector(\"._active\")?.textContent;\r\n        console.log(selected);\r\n        setInput(selected || \"\");\r\n        setIsVisible(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const enable_hover = () => {\r\n    if (isKeyDown) {\r\n      setIsKeyDown(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    filter_suggestions(input);\r\n  }, [input, filter_suggestions]);\r\n\r\n  useEffect(() => {\r\n    if (!isVisible) {\r\n      setCurrentIndex(0);\r\n    }\r\n    document.addEventListener(\"click\", handle_click_outside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handle_click_outside);\r\n    };\r\n  }, [ref, isVisible]);\r\n\r\n  useEffect(() => {\r\n    if (isDisabled) {\r\n      setInput(\"\");\r\n    }\r\n  }, [isDisabled]);\r\n\r\n  useEffect(() => {\r\n    setInput(\"\");\r\n  }, [suggestions]);\r\n\r\n  return (\r\n    <div\r\n      className={`_autocomplete_container ${isVisible ? \"is_focus\" : \"\"}`}\r\n      ref={ref}\r\n      onMouseMove={enable_hover}\r\n    >\r\n      <input\r\n        onFocus={() => setIsVisible(true)}\r\n        onChange={(e) => input_handler(e)}\r\n        onKeyDown={(e) => handle_key(e)}\r\n        type=\"text\"\r\n        value={input}\r\n        disabled={isDisabled ? true : false}\r\n        placeholder={placeholder}\r\n      />\r\n      {isVisible && (\r\n        <DropDown\r\n          suggestions={filteredSuggestions}\r\n          set_input={set_input}\r\n          current_index={CurrentIndex}\r\n          set_current_index={setCurrentIndex}\r\n          is_key_down={isKeyDown}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputAutoComplete;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport \"../styles/input-location.scss\";\r\nimport { VscArrowLeft } from \"react-icons/vsc\";\r\nimport InputAutoComplete from \"./InputAutoComplete\";\r\nimport DropDown from \"./partial/DropDown\";\r\n\r\ninterface Props {\r\n  countries: any;\r\n  cities: any;\r\n}\r\n\r\nconst InputLocation: React.FunctionComponent<Props> = ({\r\n  countries,\r\n  cities,\r\n}) => {\r\n  const [inputIsVisible, setInputIsVisible] = useState<Boolean>(false);\r\n  const [inputIsDisabled, setInputIsDisabled] = useState<Boolean>(false);\r\n  const [input, setInput] = useState<string>(\"Italy\");\r\n  const [countryCode, setCountryCode] = useState<string>(\"IT\");\r\n  const [suggestionsCities, setSuggestionsCities] = useState<any[]>([]);\r\n\r\n  const set_country_code = (country_name: string) => {\r\n    let value = country_name.toLowerCase();\r\n    let code = countries.filter((country: any) =>\r\n      country.name.toLowerCase().includes(value)\r\n    )[0].code;\r\n    setCountryCode(code);\r\n    setInputIsVisible(false);\r\n  };\r\n\r\n  const filter_cities = useCallback(\r\n    (code_value) => {\r\n      let res = [];\r\n      if (code_value === \"remote\" || code_value === \"all\") {\r\n        setInputIsDisabled(true);\r\n        return console.log(\"REMOTE OR ALL\");\r\n      }\r\n      if (code_value) {\r\n        setInputIsDisabled(false);\r\n        res = cities.filter((city: any) => city.country.includes(code_value));\r\n      }\r\n      setSuggestionsCities(res);\r\n    },\r\n    [cities]\r\n  );\r\n\r\n  const reset_country_input = useCallback(() => {\r\n    if (!inputIsVisible && !input) {\r\n      // restore input value if empty\r\n      let input = countries.filter((country: any) => {\r\n        return country.code.includes(countryCode);\r\n      })[0].name;\r\n      setInput(input);\r\n    }\r\n  }, [input, inputIsVisible, setInput, countries, countryCode]);\r\n  useEffect(() => {\r\n    filter_cities(countryCode);\r\n  }, [filter_cities, countryCode]);\r\n\r\n  useEffect(() => {\r\n    reset_country_input();\r\n  }, [inputIsVisible, reset_country_input]);\r\n\r\n  return (\r\n    <>\r\n      <div className={`_input_location ${inputIsVisible ? \"focus\" : \"\"}`}>\r\n        <InputAutoComplete\r\n          suggestions={suggestionsCities}\r\n          isDisabled={inputIsDisabled}\r\n          placeholder=\"Where?\"\r\n          min_length={3}\r\n          sort={true}\r\n        />\r\n        <InputCountry\r\n          suggestions={countries}\r\n          input={input}\r\n          setInput={setInput}\r\n          set_country_code={set_country_code}\r\n          is_visible={inputIsVisible}\r\n        />\r\n        <span\r\n          className={`country_btn`}\r\n          onClick={() => setInputIsVisible((state) => !state)}\r\n        >\r\n          {inputIsVisible ? (\r\n            <VscArrowLeft />\r\n          ) : (\r\n            <span className=\"_cc\">{countryCode}</span>\r\n          )}\r\n        </span>\r\n      </div>\r\n      {inputIsVisible && (\r\n        <div className=\"_trigger\" onClick={() => setInputIsVisible(false)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputLocation;\r\n\r\ninterface ChildProps {\r\n  suggestions: any;\r\n  input: string;\r\n  setInput: any;\r\n  set_country_code: any;\r\n  is_visible: Boolean;\r\n}\r\n\r\nconst InputCountry: React.FunctionComponent<ChildProps> = ({\r\n  suggestions = [],\r\n  input = \"\",\r\n  setInput,\r\n  set_country_code,\r\n  is_visible = false,\r\n}) => {\r\n  const [isVisible, setIsVisible] = useState<boolean>(false);\r\n  const [CurrentIndex, setCurrentIndex] = useState<number>(0);\r\n  const [endIndex, setEndIndex] = useState<number>(suggestions.length);\r\n  const [filteredSuggestions, setFilteredSuggestions] = useState<any[]>([]);\r\n  const [isKeyDown, setIsKeyDown] = useState<boolean>(false);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const handle_click_outside = (evt: any) => {\r\n    if (ref.current && !ref.current.contains(evt.target)) {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  const filter_suggestions = useCallback(\r\n    (input: string) => {\r\n      let value = input.toLowerCase();\r\n\r\n      let filtered_suggestions = suggestions.filter((item: any) =>\r\n        item.name.toLowerCase().includes(value)\r\n      );\r\n\r\n      setFilteredSuggestions(filtered_suggestions);\r\n      setEndIndex(filtered_suggestions.length - 1);\r\n    },\r\n    [suggestions]\r\n  );\r\n\r\n  const input_handler = (evt: any) => {\r\n    evt.preventDefault();\r\n\r\n    setInput(evt.target.value);\r\n    setCurrentIndex(0);\r\n    setIsVisible(true);\r\n  };\r\n\r\n  const set_input = (value: string) => {\r\n    setInput(value);\r\n    set_country_code(value);\r\n    setIsVisible(false);\r\n  };\r\n\r\n  const handle_key = (evt: any) => {\r\n    evt.stopPropagation();\r\n    if (evt.key === \"ArrowUp\") {\r\n      /* ARROW UP */\r\n      setIsKeyDown(true);\r\n      if (CurrentIndex === 0) {\r\n        return setCurrentIndex(endIndex);\r\n      }\r\n      setCurrentIndex((index) => index - 1);\r\n    }\r\n    if (evt.key === \"ArrowDown\") {\r\n      /* ARROW DOWN */\r\n      setIsKeyDown(true);\r\n      if (CurrentIndex === endIndex) {\r\n        return setCurrentIndex(0);\r\n      }\r\n      setCurrentIndex((index) => index + 1);\r\n    }\r\n    if (evt.key === \"Enter\") {\r\n      /* ENTER */\r\n      if (isVisible) {\r\n        evt.preventDefault(); // prevent form SUBMIT\r\n        let selected = document.querySelector(\"._active\")?.textContent;\r\n        console.log(selected);\r\n        setInput(selected || \"\");\r\n        set_country_code(selected);\r\n        setIsVisible(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const enable_hover = () => {\r\n    if (isKeyDown) {\r\n      setIsKeyDown(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    filter_suggestions(input);\r\n  }, [input, filter_suggestions]);\r\n\r\n  useEffect(() => {\r\n    if (!isVisible) {\r\n      setCurrentIndex(0);\r\n    }\r\n    document.addEventListener(\"click\", handle_click_outside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handle_click_outside);\r\n    };\r\n  }, [ref, isVisible]);\r\n\r\n  return (\r\n    <div\r\n      className={`_autocomplete_container _absolute ${\r\n        is_visible ? \"extend\" : \"\"\r\n      }`}\r\n      ref={ref}\r\n      onMouseMove={enable_hover}\r\n    >\r\n      <input\r\n        onFocus={() => setIsVisible(true)}\r\n        onChange={(e) => input_handler(e)}\r\n        onKeyDown={(e) => handle_key(e)}\r\n        type=\"text\"\r\n        value={input}\r\n      />\r\n      {isVisible && (\r\n        <DropDown\r\n          suggestions={filteredSuggestions}\r\n          set_input={set_input}\r\n          current_index={CurrentIndex}\r\n          set_current_index={setCurrentIndex}\r\n          is_key_down={isKeyDown}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\ninterface apiState {\r\n  location?: string;\r\n  category?: string;\r\n  page_index: number;\r\n  page_count?: number;\r\n}\r\n\r\nconst initialState: apiState = {\r\n  location: \"\",\r\n  category: \"\",\r\n  page_index: 1,\r\n  page_count: 0,\r\n};\r\n\r\nconst apiSlice = createSlice({\r\n  name: \"request\",\r\n  initialState,\r\n  reducers: {\r\n    updateReq: (state, action: PayloadAction<Partial<apiState>>) => {\r\n      console.log({ ...state, ...action.payload });\r\n      return { ...state, ...action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { updateReq } = apiSlice.actions;\r\nexport default apiSlice.reducer;\r\n\r\nexport const pageCount = (state: RootState) => state.request.page_count;\r\nexport const pageIndex = (state: RootState) => state.request.page_index;\r\nexport const reqObj = (state: RootState) => state.request;\r\n","import { useRef, useState } from \"react\";\r\nimport InputAutoComplete from \"./InputAutoComplete\";\r\nimport categories from \"../assets/categories.json\";\r\nimport countries from \"../assets/countries.json\";\r\nimport cities from \"cities.json\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n\r\nimport InputLocation from \"./InputLocation\";\r\nimport { useAppDispatch } from \"../app/hooks\";\r\nimport { updateReq } from \"../app/apiSlice\";\r\n\r\nconst SearchBar: React.FunctionComponent = () => {\r\n  const dispatch = useAppDispatch();\r\n  const submit = (evt: any) => {\r\n    evt.preventDefault();\r\n    let category =\r\n      evt.target[0].value &&\r\n      \"&category=\" + evt.target[0].value.replace(/ /g, \"%20\");\r\n    let city = evt.target[1].value.trim().replace(/ /g, \"%20\");\r\n    let country = evt.target[2].value.trim().replace(/ /g, \"%20\");\r\n    let location = `&location=${country}`;\r\n    if (city) {\r\n      location = `&location=${city}%2C20${country}`;\r\n    }\r\n\r\n    dispatch(updateReq({ location: location, category: category }));\r\n  };\r\n  return (\r\n    <form onSubmit={(e) => submit(e)}>\r\n      <InputAutoComplete suggestions={categories} placeholder=\"Job title\" />\r\n      <InputLocation countries={countries} cities={cities} />\r\n      <button type=\"submit\">\r\n        <FiSearch />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import SearchBar from \"../components/SearchBar\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Get[Jobs]</h1>\r\n      <SearchBar />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../app/store\";\r\n\r\ninterface appState {\r\n  info?: any;\r\n}\r\n\r\nconst initialState: appState = {\r\n  info: undefined,\r\n};\r\n\r\nconst jobSlice = createSlice({\r\n  name: \"job\",\r\n  initialState,\r\n  reducers: {\r\n    setJob: (state, action: PayloadAction<appState>) => {\r\n      return (state = action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setJob } = jobSlice.actions;\r\nexport default jobSlice.reducer;\r\n\r\nexport const info = (state: RootState) => state.job.info;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAppDispatch } from \"../app/hooks\";\r\nimport { setJob } from \"../app/jobSlice\";\r\n\r\ninterface Props {\r\n  jobs: any[];\r\n  expand: boolean;\r\n  total?: number;\r\n  setExpand: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Jobs: React.FunctionComponent<Props> = ({\r\n  jobs = [],\r\n  expand,\r\n  setExpand,\r\n  total,\r\n}) => {\r\n  const [active, setActive] = useState<any>(undefined);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const expand_job = (job_info: any, id: number) => {\r\n    setActive(id);\r\n    setExpand(true);\r\n    dispatch(setJob({ info: job_info }));\r\n  };\r\n\r\n  const date_to_string = (date: string) => {\r\n    const new_date = new Date(date);\r\n    return new_date.toLocaleDateString(\"it-IT\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"job_list\">\r\n        <span>{`Found ${total} job offers`}</span>\r\n        {jobs.length > 0 &&\r\n          jobs.map((job: any) => (\r\n            <div\r\n              key={job.id}\r\n              className={`job ${active === job.id ? \"active\" : \"\"}`}\r\n              onClick={() => expand_job(job, job.id)}\r\n            >\r\n              <strong>{job.name}</strong>\r\n              <span>{job.company.name}</span>\r\n              <Locations locations={job.locations} id={job.id} />\r\n              <span>{date_to_string(job.publication_date)}</span>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n\r\ninterface locationProps {\r\n  locations: any[];\r\n  id: string;\r\n}\r\nconst Locations: React.FunctionComponent<locationProps> = ({\r\n  locations,\r\n  id,\r\n}) => {\r\n  return (\r\n    <span>\r\n      {locations.map((location: any) => (\r\n        <span key={location.name + id}>{location.name}</span>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { updateReq } from \"../app/apiSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { VscArrowLeft, VscArrowRight } from \"react-icons/vsc\";\r\n\r\ninterface Props {\r\n  page_count?: Number;\r\n  is_loading?: boolean;\r\n  expand?: boolean;\r\n}\r\n\r\nconst Paginator: React.FunctionComponent<Props> = ({\r\n  page_count = 0,\r\n  is_loading = false,\r\n  expand = false,\r\n}) => {\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const update_page = useCallback(() => {\r\n    return dispatch(updateReq({ page_index: page }));\r\n  }, [dispatch, page]);\r\n\r\n  const page_evt = (target: string) => {\r\n    if (is_loading) return console.log(\"loading...\");\r\n    if (target === \"next\") {\r\n      if (page >= page_count) return;\r\n      setPage(page + 1);\r\n    }\r\n    if (target === \"prev\") {\r\n      if (page <= 1) return;\r\n      setPage(page - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    update_page();\r\n  }, [update_page]);\r\n\r\n  return (\r\n    <div className={`paginator ${expand ? \"reduced\" : \"\"}`}>\r\n      <span className=\"arrow\" id=\"prev\" onClick={() => page_evt(\"prev\")}>\r\n        <VscArrowLeft />\r\n      </span>\r\n      <span>{`Page: ${page} of ${page_count}`}</span>\r\n      <span className=\"arrow\" id=\"next\" onClick={() => page_evt(\"next\")}>\r\n        <VscArrowRight />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const themuseApi = createApi({\r\n  reducerPath: \"themuseApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://www.themuse.com/api/public/\",\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getJobs: builder.query({\r\n      query: (src = { category: \"\", location: \"\", page_index: 1 }) =>\r\n        `jobs?${src.category}${src.location}&page=${src.page_index}`,\r\n    }),\r\n    getJob: builder.query({\r\n      query: (id) => `jobs/${id}`,\r\n    }),\r\n    getCompany: builder.query({\r\n      query: (id) => `companies/${id}`,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetJobsQuery } = themuseApi;\r\nexport const { useGetJobQuery } = themuseApi;\r\nexport const { useGetCompanyQuery } = themuseApi;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { VscArrowLeft } from \"react-icons/vsc\";\r\nimport { useAppSelector } from \"../app/hooks\";\r\nimport { info } from \"../app/jobSlice\";\r\nimport { useGetCompanyQuery } from \"../service/themuseAPI\";\r\n\r\ninterface Props {\r\n  back_arrow_click: any;\r\n  is_expand: boolean;\r\n}\r\n\r\nconst Job: React.FunctionComponent<Props> = ({\r\n  back_arrow_click,\r\n  is_expand,\r\n}) => {\r\n  const job = useAppSelector(info);\r\n\r\n  useEffect(() => {\r\n    document.querySelector(\".job-main\")?.scrollTo(0, 0);\r\n    console.log(job);\r\n  });\r\n  return (\r\n    <>\r\n      {job !== undefined && (\r\n        <div className={`job_detail ${!is_expand ? \"_hide\" : \"\"}`}>\r\n          <div className=\"job-header\">\r\n            <strong>{job.company.name}</strong>\r\n            <span className=\"icon\" onClick={back_arrow_click}>\r\n              <VscArrowLeft />\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"job-main\">\r\n            <Thumbnail id={job.company.id} />\r\n            <strong>{job.name}</strong>\r\n            {job.locations.map((location: { name: string }, index: number) => (\r\n              <span key={location.name + index}>{location.name}</span>\r\n            ))}\r\n            {job.levels.map((level: { name: string }, index: number) => (\r\n              <span key={level.name + index}>{level.name}</span>\r\n            ))}\r\n            <Content innerHTML={job.contents} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n\r\ninterface ContentProps {\r\n  innerHTML: string;\r\n}\r\nconst Content: React.FunctionComponent<ContentProps> = ({ innerHTML }) => {\r\n  const contentRef = useRef<HTMLSpanElement>(null);\r\n  const parseHTML = (content: string) => {\r\n    contentRef.current !== null && (contentRef.current.innerHTML = content);\r\n  };\r\n  useEffect(() => {\r\n    parseHTML(innerHTML);\r\n  });\r\n  return <span className=\"content\" ref={contentRef}></span>;\r\n};\r\n\r\ninterface ThumbnailProps {\r\n  id?: number;\r\n}\r\n\r\nconst Thumbnail: React.FunctionComponent<ThumbnailProps> = ({ id }) => {\r\n  const { data, isLoading, isSuccess } = useGetCompanyQuery(id);\r\n\r\n  return (\r\n    <>\r\n      {isSuccess && !isLoading && (\r\n        <img src={data.refs?.logo_image} alt=\"thumb-company\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport Jobs from \"../layout/Jobs\";\r\nimport Paginator from \"../layout/Paginator\";\r\nimport { useGetJobsQuery } from \"../service/themuseAPI\";\r\nimport { updateReq, reqObj } from \"../app/apiSlice\";\r\nimport Job from \"../layout/Job\";\r\nconst array = [{ name: \"test\" }];\r\nconst Home: React.FunctionComponent = () => {\r\n  const [expandJob, setExpandJob] = useState<boolean>(false);\r\n  const req = useAppSelector(reqObj);\r\n  const { data, error, isLoading, isSuccess, isError } = useGetJobsQuery(req);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const test = () => {\r\n    setExpandJob(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {isLoading && <h1>LOADING TIME</h1>}\r\n      <div className={`column ${expandJob ? \"_reduced\" : \"\"} `}>\r\n        {isSuccess && (\r\n          <Jobs\r\n            jobs={data?.results}\r\n            expand={expandJob}\r\n            setExpand={setExpandJob}\r\n            total={data?.total}\r\n          />\r\n        )}\r\n        <Paginator\r\n          page_count={data?.page_count}\r\n          is_loading={isLoading}\r\n          expand={expandJob}\r\n        />\r\n      </div>\r\n      <Job back_arrow_click={test} is_expand={expandJob} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Header from \"./layout/Header\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { themuseApi } from \"../service/themuseAPI\";\nimport apiSlice from \"./apiSlice\";\nimport jobSlice from \"./jobSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    request: apiSlice,\n    job: jobSlice,\n    [themuseApi.reducerPath]: themuseApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(themuseApi.middleware),\n});\n\n/* setupListeners(store.dispatch); */\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/header.scss\";\nimport \"./styles/paginator.scss\";\nimport \"./styles/job-list.scss\";\nimport \"./styles/job-detail.scss\";\nimport \"./styles/media-query.scss\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\n/* if (\n  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  )\n) {\n  require(\"./styles/layout-mobile.scss\");\n  console.log(\"mobile\");\n} else {\n  require(\"./styles/layout.scss\");\n} */\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}